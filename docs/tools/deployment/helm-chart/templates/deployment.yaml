apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "formal-framework.fullname" . }}-app
  labels:
    {{- include "formal-framework.labels" . | nindent 4 }}
    app.kubernetes.io/component: app
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "formal-framework.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: app
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "formal-framework.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: app
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Values.global.imageTag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.service.targetPort }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.app.env.NODE_ENV | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.app.env.LOG_LEVEL | quote }}
            - name: API_BASE_URL
              value: {{ .Values.app.env.API_BASE_URL | quote }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "formal-framework.fullname" . }}-postgresql
                  key: postgres-password
            - name: REDIS_URL
              value: "redis://{{ include "formal-framework.fullname" . }}-redis-master:6379"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
      volumes:
        - name: app-logs
          emptyDir: {}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "formal-framework.fullname" . }}-verification
  labels:
    {{- include "formal-framework.labels" . | nindent 4 }}
    app.kubernetes.io/component: verification
spec:
  replicas: {{ .Values.verification.replicaCount }}
  selector:
    matchLabels:
      {{- include "formal-framework.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: verification
  template:
    metadata:
      labels:
        {{- include "formal-framework.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: verification
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
        - name: verification
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.verification.image.repository }}:{{ .Values.verification.image.tag | default .Values.global.imageTag }}"
          imagePullPolicy: {{ .Values.verification.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.verification.service.targetPort }}
              protocol: TCP
          env:
            - name: TARGET_URL
              value: {{ .Values.verification.env.TARGET_URL | quote }}
            - name: CHECK_INTERVAL
              value: {{ .Values.verification.env.CHECK_INTERVAL | quote }}
          resources:
            {{- toYaml .Values.verification.resources | nindent 12 }}
          volumeMounts:
            - name: verification-reports
              mountPath: /app/reports
      volumes:
        - name: verification-reports
          emptyDir: {}
